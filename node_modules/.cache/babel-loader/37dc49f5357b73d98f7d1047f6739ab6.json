{"ast":null,"code":"var _jsxFileName = \"/Users/dhruvhome/my-yelp-app/src/Search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { NavBar } from '../NavBar/NavBar';\nimport { SubNav } from '../NavBar/SubNav/SubNav';\nimport { SearchResultsSummary } from './SearchResultsSummary/SearchResultsSummary';\nimport { SearchResults } from './SearchResults/SearchResults';\nimport useReactRouter from 'use-react-router'; //import { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { useBusinessSearch } from '../hooks/yelp-api/useBusinessSearch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Search() {\n  _s();\n\n  const {\n    location,\n    history\n  } = useReactRouter();\n  const params = new URLSearchParams(location.search);\n  const term = params.get('find_desc');\n  const locationParam = params.get('find_loc');\n  const [businesses, amountResults, searchParams, performSearch] = useBusinessSearch(term, locationParam);\n\n  if (!term || !locationParam) {\n    history.push('/');\n  }\n\n  function search(term, location) {\n    const encodedTerm = encodeURI(term);\n    const encodedLocation = encodeURI(location);\n    history.push(`/search?find_desc=${encodedTerm}&find_loc=${encodedLocation}`);\n    performSearch({\n      term,\n      location\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      term: term,\n      location: locationParam,\n      search: search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchResultsSummary, {\n      term: searchParams.term,\n      location: searchParams.location,\n      amountResults: amountResults,\n      shownResults: businesses ? businesses.length : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      businesses: businesses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Search, \"N24dnDccEiXg6jH0b/XYgInUdUY=\", false, function () {\n  return [useReactRouter, useBusinessSearch];\n});\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/dhruvhome/my-yelp-app/src/Search/Search.js"],"names":["React","NavBar","SubNav","SearchResultsSummary","SearchResults","useReactRouter","useBusinessSearch","Search","location","history","params","URLSearchParams","search","term","get","locationParam","businesses","amountResults","searchParams","performSearch","push","encodedTerm","encodeURI","encodedLocation","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,oBAAT,QAAqC,6CAArC;AACA,SAASC,aAAT,QAA8B,+BAA9B;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;AACA,SAAQC,iBAAR,QAAgC,qCAAhC;;AAEA,OAAO,SAASC,MAAT,GAAkB;AAAA;;AACtB,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAsBJ,cAAc,EAA1C;AACC,QAAMK,MAAM,GAAG,IAAIC,eAAJ,CAAoBH,QAAQ,CAACI,MAA7B,CAAf;AACA,QAAMC,IAAI,GAAGH,MAAM,CAACI,GAAP,CAAW,WAAX,CAAb;AACA,QAAMC,aAAa,GAAGL,MAAM,CAACI,GAAP,CAAW,UAAX,CAAtB;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,EAA4BC,YAA5B,EAA0CC,aAA1C,IAA2Db,iBAAiB,CAACO,IAAD,EAAOE,aAAP,CAAlF;;AAEA,MAAI,CAACF,IAAD,IAAS,CAACE,aAAd,EAA6B;AACzBN,IAAAA,OAAO,CAACW,IAAR,CAAa,GAAb;AACH;;AAED,WAASR,MAAT,CAAgBC,IAAhB,EAAsBL,QAAtB,EAAgC;AAC5B,UAAMa,WAAW,GAAGC,SAAS,CAACT,IAAD,CAA7B;AACA,UAAMU,eAAe,GAAGD,SAAS,CAACd,QAAD,CAAjC;AACAC,IAAAA,OAAO,CAACW,IAAR,CAAc,qBAAoBC,WAAY,aAAYE,eAAgB,EAA1E;AACAJ,IAAAA,aAAa,CAAC;AAACN,MAAAA,IAAD;AAAOL,MAAAA;AAAP,KAAD,CAAb;AACH;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEK,IAAd;AAAoB,MAAA,QAAQ,EAAEE,aAA9B;AAA6C,MAAA,MAAM,EAAEH;AAArD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,oBAAD;AAAsB,MAAA,IAAI,EAAEM,YAAY,CAACL,IAAzC;AACsB,MAAA,QAAQ,EAAEK,YAAY,CAACV,QAD7C;AAEsB,MAAA,aAAa,EAAES,aAFrC;AAGsB,MAAA,YAAY,EAAED,UAAU,GAAGA,UAAU,CAACQ,MAAd,GAAuB;AAHrE;AAAA;AAAA;AAAA;AAAA,YAHJ,eAQI,QAAC,aAAD;AAAe,MAAA,UAAU,EAAER;AAA3B;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA9BeT,M;UACeF,c,EAIsCC,iB;;;KALrDC,M","sourcesContent":["import React from 'react';\nimport { NavBar } from '../NavBar/NavBar';\nimport { SubNav } from '../NavBar/SubNav/SubNav';\nimport { SearchResultsSummary } from './SearchResultsSummary/SearchResultsSummary';\nimport { SearchResults } from './SearchResults/SearchResults';\nimport useReactRouter from 'use-react-router';\n//import { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {useBusinessSearch} from '../hooks/yelp-api/useBusinessSearch';\n\nexport function Search() {\n   const {location, history} = useReactRouter();\n    const params = new URLSearchParams(location.search);\n    const term = params.get('find_desc');\n    const locationParam = params.get('find_loc');\n    const [businesses, amountResults, searchParams, performSearch] = useBusinessSearch(term, locationParam);\n\n    if (!term || !locationParam) {\n        history.push('/');\n    }\n\n    function search(term, location) {\n        const encodedTerm = encodeURI(term);\n        const encodedLocation = encodeURI(location);\n        history.push(`/search?find_desc=${encodedTerm}&find_loc=${encodedLocation}`);\n        performSearch({term, location});\n    }\n\n    return (\n        <div>\n            <NavBar term={term} location={locationParam} search={search}/>\n            <SubNav/>\n            <SearchResultsSummary term={searchParams.term}\n                                  location={searchParams.location}\n                                  amountResults={amountResults}\n                                  shownResults={businesses ? businesses.length : 0}\n            />\n            <SearchResults businesses={businesses}/>\n        </div>\n    ); \n}"]},"metadata":{},"sourceType":"module"}